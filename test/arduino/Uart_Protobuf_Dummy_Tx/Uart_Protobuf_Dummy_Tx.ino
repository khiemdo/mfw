/*!
 The circuit:
 * RX is digital pin 10 (connect to TX of other device)
 * TX is digital pin 11 (connect to RX of other device)
 * Baudrate: 115200 8-N-1
 */
 
int leetMessageOverSerialProto[] = {0xA5, 0x00, 0x02, 0x13, 0x37, 0x5A, 0x5A};

int pbBetConfMessageOverSerialProto [] = 
{
  0xA5,                                            // Serial proto SYNC
  0x00, 0x94,                                      // Serial proto length
  0x93, 0x01, 0x0A, 0x14, 0x0A, 0x06, 0x08, 0x01,  // Serial proto payload = pb_betCONF
  0x10, 0x01, 0x18, 0x00, 0x10, 0x01, 0x18, 0x01,
  0x20, 0x01, 0x50, 0x01, 0x58, 0x01, 0x60, 0x01,
  0x12, 0x0D, 0x0A, 0x06, 0x08, 0x01, 0x10, 0x01,
  0x18, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x1A,
  0x12, 0x0A, 0x06, 0x08, 0x01, 0x10, 0x01, 0x18,
  0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x7D, 0x00,
  0x00, 0x00, 0x00, 0x22, 0x12, 0x0A, 0x06, 0x08,
  0x01, 0x10, 0x01, 0x18, 0x00, 0x75, 0x00, 0x00,
  0x00, 0x00, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x2A,
  0x12, 0x0A, 0x06, 0x08, 0x01, 0x10, 0x01, 0x18,
  0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x7D, 0x00,
  0x00, 0x00, 0x00, 0x32, 0x0D, 0x0A, 0x06, 0x08,
  0x01, 0x10, 0x01, 0x18, 0x00, 0x75, 0x00, 0x00,
  0x00, 0x00, 0x3A, 0x17, 0x0A, 0x06, 0x08, 0x01,
  0x10, 0x01, 0x18, 0x00, 0x15, 0x00, 0x00, 0x00,
  0x00, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00,
  0x00, 0x00, 0x00, 0x4A, 0x08, 0x0A, 0x06, 0x08,
  0x01, 0x10, 0x01, 0x18,
  0x5A, 0x5A                                        // Serial proto CRC
};

int testData [] =
{
0xA5, 
0x00, 0x94, 
0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,
0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,
0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,
0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,
0x90, 0x91, 0x92, 0x93, 0x5A, 0x5A 
};

int i;
int messageToSend; // 1=leet, 2=leet, 3=pb_BetCONF
int loopCounter;

/* ================== START OF USER DEFINES =====================  */

/* \brief Defines the number of messages to transmit. */
#define MAX_LOOP_COUNT   10000

/* \brief Defines the number of messages to transmit.
   
   \warning IMPORTANT! Keep this value in sync with the
            corresponding baud rate! E.g. when setting
            this value to 5ms (= 200Hz) you should set
            the baudrate to 1000000 (= 1MBit/s).
            Otherwise the data rate is to slow for the
            TX intervall.
*/
#define TX_INTERVALL_MS    5

/* \brief Defines the baudrate for the serial port.
          Up to 1MBit/s (= 1000000) is supported.
          
   \warning IMPORTANT! Keep this value in sync with the
            TX intervall!
*/
#define SERIAL_BAUD_RATE   1000000

/* ================== END OF USER DEFINES =====================  */

void setup()
{
  // Open serial communications and wait for port to open:
  Serial.begin(SERIAL_BAUD_RATE);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo only
  }

  i = 0;
  messageToSend = 1;
  loopCounter = 0;
}

void loop() // run over and over
{
  delay(TX_INTERVALL_MS);

  if( messageToSend == 1 )
  {
    messageToSend = 2;
    for(i=0; i < (sizeof(leetMessageOverSerialProto) / sizeof(int)); i++ )
    {
      Serial.write( leetMessageOverSerialProto[i] );
    }
  }
   else if( messageToSend == 2 )
  {
    messageToSend = 3;
    for(i=0; i < (sizeof(leetMessageOverSerialProto) / sizeof(int)); i++ )
    {
      Serial.write( leetMessageOverSerialProto[i] );
    }
  }
  else
  {
    messageToSend = 1;
    for(i=0; i < (sizeof(pbBetConfMessageOverSerialProto) / sizeof(int)); i++ )
    {
      Serial.write( pbBetConfMessageOverSerialProto[i] );
    }

    /* Use the following piece of code to transmit test dummy data with
       payload from 0x00 ... 0x93. */
    //for(i=0; i < (sizeof(testData) / sizeof(int)); i++ )
    //{
    //  Serial.write( testData[i] );
    //}
  }

  loopCounter++;

  if(loopCounter == MAX_LOOP_COUNT)
  {
    /* Stop here after we send out all messages. */
    while(1);
  }
}

